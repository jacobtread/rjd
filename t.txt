
  public void iterStr () {
    new StringBuilder().<init>();
    var1 = new StringBuilder();
    var2 = 1000;
    var3 = 0;
    if (var3 >= var2) { GOTO: 39 }
    var1.append("This is a string");
    var1 = var1.append(10);
    var3 += 1;
    var1.reverse();
    System.out.println(var2);
    System.out.println(var1);
    var3 = 0;
    if (var3 >= var2) { GOTO: 85 }
    var1.append("This is a string 1");
    var1.append(10);
    var3 += 1;
    System.out.println(var1);
    return;

Dominators { 
    root: 0, 
    dominators: {
        19: 14, 
        65: 60, 
        60: 39, 
        85: 60, 
        0: 0, 
        39: 14, 
        14: 0
    } 
} 

Strongly Connected: [
    [85], 
    [65, 60], 
    [39], 
    [19, 14], 
    [0]
]

Blocks:
    0:
      new StringBuilder().<init>();
      var1 = new StringBuilder();
      var2 = 1000;
      var3 = 0;
      branches: [14]
    14:
      if (var3 >= var2) { GOTO: 39 }
      branches: [39, 19]
    19:
      var1.append("This is a string");
      var1 = var1.append(10);
      var3 += 1;
      branches: [14]
    39:
      var1.reverse();
      System.out.println(var2);
      System.out.println(var1);
      var3 = 0;
      branches: [60]
    60:
      if (var3 >= var2) { GOTO: 85 }
      branches: [85, 65]
    65:
      var1.append("This is a string 1");
      var1.append(10);
      var3 += 1;
      branches: [60]
    85:
      System.out.println(var1);
      return;
      branches: []
